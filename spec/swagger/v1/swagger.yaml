openapi: 3.0.1
info:
  title: Crowd Parlay Users API
  version: v1
paths:
  /connect/token:
    post:
      tags:
        - Authentication
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                scope:
                  type: string
                username:
                  type: string
                password:
                  type: string
                refresh_token:
                  type: string
            encoding:
              grant_type:
                style: form
              scope:
                style: form
              username:
                style: form
              password:
                style: form
              refresh_token:
                style: form
      responses:
        '200':
          description: Success
  /api/users/register:
    post:
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersRegisterRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UsersRegisterRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UsersRegisterRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UsersRegisterResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/UsersRegisterResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/UsersRegisterResponse'
  '/api/users/{userId}':
    get:
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UsersGetByIdResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/UsersGetByIdResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/UsersGetByIdResponse'
    put:
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UsersUpdateRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UsersUpdateRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UsersUpdateResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/UsersUpdateResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/UsersUpdateResponse'
    delete:
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
  /api/users/resolve:
    get:
      tags:
        - Users
      parameters:
        - name: username
          in: query
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UsersGetByUsernameResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/UsersGetByUsernameResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/UsersGetByUsernameResponse'
components:
  schemas:
    UsersGetByIdResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        displayName:
          type: string
        avatarUrl:
          type: string
          nullable: true
      additionalProperties: false
    UsersGetByUsernameResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        displayName:
          type: string
        avatarUrl:
          type: string
          nullable: true
      additionalProperties: false
    UsersRegisterRequest:
      type: object
      properties:
        username:
          type: string
        displayName:
          type: string
        password:
          type: string
        avatarUrl:
          type: string
          nullable: true
      additionalProperties: false
    UsersRegisterResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        displayName:
          type: string
        avatarUrl:
          type: string
          nullable: true
      additionalProperties: false
    UsersUpdateRequest:
      type: object
      properties:
        username:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        avatarUrl:
          type: string
          nullable: true
        oldPassword:
          type: string
          nullable: true
        newPassword:
          type: string
          nullable: true
      additionalProperties: false
    UsersUpdateResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        displayName:
          type: string
        avatarUrl:
          type: string
          nullable: true
      additionalProperties: false